#!/usr/bin/env python3
"""
Script para corrigir configura√ß√£o do Cloudinary
"""

import os
from dotenv import load_dotenv

def show_cloudinary_guide():
    """Mostra guia detalhado para configurar Cloudinary"""
    print("üîß GUIA PARA CONFIGURAR CLOUDINARY")
    print("=" * 50)
    print()
    print("üìã PASSO A PASSO:")
    print()
    print("1Ô∏è‚É£ Acesse: https://cloudinary.com/console")
    print("2Ô∏è‚É£ Fa√ßa login na sua conta")
    print("3Ô∏è‚É£ No Dashboard, voc√™ ver√°:")
    print("   ‚îî‚îÄ‚îÄ Cloud Name (exemplo: dxyz12345)")
    print("   ‚îî‚îÄ‚îÄ API Key (exemplo: 1475115867)")
    print("   ‚îî‚îÄ‚îÄ API Secret (exemplo: abc123def456)")
    print()
    print("4Ô∏è‚É£ Copie esses valores")
    print("5Ô∏è‚É£ Abra o arquivo .env")
    print("6Ô∏è‚É£ Substitua as linhas do Cloudinary:")
    print()
    print("‚ùå ATUAL (INCORRETO):")
    print("CLOUDINARY_CLOUD_NAME=pokebinder")
    print()
    print("‚úÖ CORRETO (exemplo):")
    print("CLOUDINARY_CLOUD_NAME=dxyz12345")
    print("CLOUDINARY_API_KEY=1475115867")
    print("CLOUDINARY_API_SECRET=abc123def456")
    print()
    print("‚ö†Ô∏è IMPORTANTE:")
    print("- Cloud Name N√ÉO √© 'pokebinder'")
    print("- Cloud Name √© o nome da sua conta Cloudinary")
    print("- Geralmente come√ßa com letras/n√∫meros")
    print("- Exemplo: dxyz12345, mycloud, etc.")
    print()

def check_current_config():
    """Verifica configura√ß√£o atual"""
    load_dotenv()
    
    cloud_name = os.getenv("CLOUDINARY_CLOUD_NAME")
    api_key = os.getenv("CLOUDINARY_API_KEY")
    api_secret = os.getenv("CLOUDINARY_API_SECRET")
    
    print("üîç CONFIGURA√á√ÉO ATUAL:")
    print("=" * 30)
    print(f"Cloud Name: {cloud_name}")
    print(f"API Key: {api_key[:10] + '...' if api_key else 'N√£o configurado'}")
    print(f"API Secret: {api_secret[:10] + '...' if api_secret else 'N√£o configurado'}")
    print()
    
    if cloud_name == "pokebinder":
        print("‚ùå PROBLEMA IDENTIFICADO:")
        print("   O Cloud Name 'pokebinder' n√£o √© v√°lido!")
        print("   Voc√™ precisa usar o Cloud Name real da sua conta.")
        print()
        return False
    else:
        print("‚úÖ Cloud Name parece estar correto")
        return True

def test_connection():
    """Testa conex√£o com Cloudinary"""
    try:
        import cloudinary
        import cloudinary.api
        
        load_dotenv()
        
        cloud_name = os.getenv("CLOUDINARY_CLOUD_NAME")
        api_key = os.getenv("CLOUDINARY_API_KEY")
        api_secret = os.getenv("CLOUDINARY_API_SECRET")
        
        cloudinary.config(
            cloud_name=cloud_name,
            api_key=api_key,
            api_secret=api_secret
        )
        
        result = cloudinary.api.ping()
        if result.get('status') == 'ok':
            print("‚úÖ Conex√£o com Cloudinary: SUCESSO!")
            return True
        else:
            print("‚ùå Erro na conex√£o com Cloudinary")
            return False
            
    except Exception as e:
        print(f"‚ùå Erro ao testar conex√£o: {str(e)}")
        return False

def main():
    print("üé¥ MyPokeBinder - Corre√ß√£o do Cloudinary")
    print("=" * 50)
    print()
    
    # Verificar configura√ß√£o atual
    if not check_current_config():
        show_cloudinary_guide()
        return
    
    # Testar conex√£o
    print("üîó Testando conex√£o...")
    if test_connection():
        print("\nüéâ Cloudinary configurado corretamente!")
        print("üöÄ Voc√™ pode agora usar o aplicativo!")
    else:
        print("\n‚ùå Ainda h√° problemas com a configura√ß√£o")
        show_cloudinary_guide()

if __name__ == "__main__":
    main()
